<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= page.title %></title>
  </head>
  <body>
    <h4><a href="/">Về trang chủ</a></h4>
    <h2><%= data.info.name %></h2>

    <form class="sendMsg" style="
      position: sticky;
      border-radius: 10px;
      background-color: gainsboro;
      top: 10px;
      padding: 10px;
    ">
      <label for="message_input">Nhắn tin: </label>
      <input
        name="message"
        id="message_input"
        type="text"
        placeholder="Nhập tin nhắn"
      />
      <button type="submit" send_button">Gửi</button>
    </form>

    <ul class="messages">
        <% data.messages.map((d) => { %>
            <div class="message" style="display: flex; flex-direction: row">
              <li style="margin-right: 10px"><%= d.user.name %>: <%= d.message.content %></li>
              <% if(d.user.name == userInfo.username) { %>
                <button class="deleteBtn" data-id="<%= d.message.id %>" onclick="deleteMessage(this)">Xóa</button>
              <% } %>
            </div>
        <% }) %>
    </ul>
  </body>

  <script src="https://cdn.socket.io/4.5.0/socket.io.min.js" integrity="sha384-7EyYLQZgWBi67fBtVxw60/OWl1kjsfrPFcaU0pp0nAh+i8FD068QogUvg85Ewy1k" crossorigin="anonymous"></script>
  <script>
    const socket = io("ws://localhost:12201", { transports : ['websocket'] });

    const sendForm = document.querySelector("form[class=sendMsg]");
    const message_input = document.querySelector("#message_input");
    const messagesList = document.querySelector("ul[class=messages]");

    const data = {
      token: "<%= userInfo.token %>",
    }

    const username = "<%= userInfo.username %>"

    socket.emit("auth", (data));

    socket.on("log", (string) => console.log(string))

    socket.on("failed", (error) => {
      let string = `Lỗi: ${error.error}. ${error.redirect ? `Bạn sẽ được chuyển hướng đến ${location.origin + error.redirect}` : ""}`
    })

    socket.on("announce", (data) => {
        console.log(`[${data.user}] ${data.content}`)
        messagesList.innerHTML += `<li><strong>Thông báo</strong>: ${data.content}</li>`
    })

    socket.on("message", (data) => {
        let html = ""
        if(data.user.name == username) html = `<div class="message">
          <li>${data.user.name}: ${data.message.content}</li>
          <button class="deleteBtn" data-id="${data.message.id}" onclick="deleteMessage(this)">Xoá</button>
        </div>`
        else {
          html = `<div class="message">
            <li>${data.user.name}: ${data.message.content}</li>
           </div>`
        }
        messagesList.innerHTML += html
    })

    sendForm.addEventListener("submit", (event) => {
      event.preventDefault();
      if (!message_input)
        return alert("DOM is changed! Please reload the page to continue.");
    
      const details = {
        message: message_input.value,
      };

      var formBody = [];
      for (var property in details) {
        var encodedKey = encodeURIComponent(property);
        var encodedValue = encodeURIComponent(details[property]);
        formBody.push(encodedKey + "=" + encodedValue);
      }
      formBody = formBody.join("&");

      fetch(`${location.origin}/api/messages/<%= data._id %>`, {
        method: "POST",
        headers: {
          username: `<%= userInfo.username %>`,
          "Content-Type": "application/x-www-form-urlencoded",
        },
        body: formBody,
      })
        .catch((res) => {
            messagesList.innerHTML += `<li><strong>Lỗi</strong>: ${res}</li>`
        })
        .then((res) => res.json())
        .then((data) => {
            if(data.error) {
                messagesList.innerHTML += `<li><strong>Lỗi</strong>: ${data.error}</li>`
            }
            message_input.value = "";
            message_input.focus();
        })
    });
  
    function deleteMessage(button) {
      if(!button.dataset?.id) return alert("Lỗi! Vui lòng tải lại trang")
      alert(`Đã nhận được yêu cầu xóa tin nhắn có ID ${button.dataset?.id}`)
    }
  </script>
</html>

<style>
  .message {
    display: flex;
    flex-direction: row;
    align-items: center;
  }

  .message li {
    margin-right: 10px;
  }
  
  .message button {
    margin-left: 50px;
  }
</style>